# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.102.0"

default_platform :android

platform :android do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "jacocoTestReport")
    gradle(task: "coveralls")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "assembleRelease")
    crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do |options|
    if options[:store]
      # supply
      puts "DONE: deploy store"
    else
      puts "DONE: deploy tala"
      # scp()
    end
  end

  desc "Deploy a new version to the Google Play"
  lane :release do
    test
    if rc?
      badge(
        shield: "#{build_version}-#{build_number}-orange",
        no_badge: true,
        glob: "/**/res/**/ic_launcher.png"
      )
      gradle(
        task: 'assemble',
        flavor: 'Prod',
        build_type: 'Release'
      )
      deploy
    elsif production?
      gradle(
        task: 'assemble',
        flavor: 'Prod',
        build_type: 'Release'
      )
      deploy(store: true)
    else
      badge(
        shield: "#{build_version}-#{build_number}-orange",
        no_badge: true,
        glob: "/**/res/**/ic_launcher.png"
      )
      gradle(
        task: 'assemble',
        flavor: 'Dev',
        build_type: 'Release'
      )
      deploy
    end
  end


  lane :build_type do
    puts "latest_tag_name=#{latest_tag_name}"
    puts "rc? #{rc?}"
    puts "dev? #{dev?}"
    puts "production? #{production?}"
  end
  # You can define as many lanes as you want
  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success: false
    )
  end

  # Helpers

  def run_on_ci?
    !ENV['BUILD_NUMBER'].nil?
  end

  def production?
    tag_without_rc = latest_tag_name =~ /v([0-9]+\.)+[0-9]+-release/
    same_version_with_dev = parse_version(latest_tag_name) == parse_version(git_branch)
    puts "tag_without_rc: #{tag_without_rc} - same_version_with_dev: #{same_version_with_dev}"
    return tag_without_rc && same_version_with_dev
  end

  def rc?
    tag_rc = latest_tag_name =~ /v([0-9]+\.)+[0-9]+-rc[0-9]+/
    same_version_with_dev = parse_version(latest_tag_name) == parse_version(git_branch)
    puts "tag_rc: #{tag_rc} - same_version_with_dev: #{same_version_with_dev}"
    puts "version: #{parse_version(latest_tag_name)} == #{parse_version(git_branch)}"
    return tag_rc && same_version_with_dev
  end

  def dev?
    git_branch =~ /dev\/([0-9]+\.)+[0-9]+/
  end

  def build_number
    ENV['BUILD_NUMBER'] || number_of_commits
  end

  def build_version
    if rc? || production?
      return parse_version(latest_tag_name)
    else
      return parse_version(git_branch)
    end
  end

  def parse_version(name)
    return name[/([0-9]+\.)+[0-9]+/]
  end

  def latest_tag_name
    return sh("git describe --tags `git rev-list --tags --max-count=1`")
  end

end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is sent or shared. Learn more at https://github.com/fastlane/enhancer
